//GFG

return max(array)


//leetcode

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int traverse(struct TreeNode* root, int* ans) {
    if (root == NULL) return 0;
    int leftExcess = traverse(root->left, ans);
    int rightExcess = traverse(root->right, ans);
    int totalExcess = root->val + leftExcess + rightExcess - 1;
    *ans += abs(totalExcess);
    return totalExcess;
}

int distributeCoins(struct TreeNode* root) {
    int ans = 0;
    traverse(root, &ans);
    return ans;
}

};
